<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Usuarios PostgreSQL</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #5c092b;
            color: #fff;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }

        h1,
        h2 {
            color: #fff;
        }

        ul {
            list-style-type: none;
            padding: 0;
        }

        li {
            margin-bottom: 10px;
        }

        .user {
            background-color: #004d40;
            color: #fff;
            border: 2px solid #004d40;
            padding: 20px;
            border-radius: 5px;
            font-size: 16px;
            width: 300px;
            margin-right: 20px;
        }

        .users {
            display: flex;
            flex-wrap: wrap;
            justify-content: flex-start;
            gap: 20px;
            margin-top: 20px;
        }

        button {
            background-color: #fff;
            color: #004d40;
            border: 2px solid #004d40;
            padding: 10px 20px;
            cursor: pointer;
            border-radius: 5px;
            font-size: 16px;
            transition: all 0.3s ease;
            margin-bottom: 20px;
        }

        button:hover {
            background-color: #004d40;
            color: #fff;
        }

        .modal {
            display: none;
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0, 0, 0, 0.4);
        }

        .modal-content {
            background-color: #fefefe;
            margin: 15% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 80%;
            max-width: 600px;
            border-radius: 5px;
        }

        .close {
            color: #fd0000;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

        .close:hover,
        .close:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }

        input[type="text"],
        input[type="email"] {
            width: calc(100% - 22px);
            padding: 10px;
            margin-bottom: 10px;
            border: 1px solid #f02c2c;
            border-radius: 5px;
            box-sizing: border-box;
        }

        button[type="submit"] {
            background-color: #004d40;
            color: #ccc;
            border: none;
            padding: 10px 20px;
            cursor: pointer;
            border-radius: 5px;
        }

        button[type="submit"]:hover {
            background-color: #00695c;
        }
    </style>
</head>

<body>
    <div style="margin-top: 50px;"> <!-- Margen superior añadido -->
        <button onclick="openCreateModal()">Crear Usuario</button>

        <div>
            <h1>{{ message }}</h1>

            <div class="users">
                {{#each users}}
                <div class="user">
                    <span><strong>Nombre:</strong> {{ this.name }}</span><br>
                    <span><strong>Email:</strong> {{ this.email }}</span><br>
                    <span><strong>Acciones:</strong> <button
                            onclick="openUpdateModal('{{ this.id }}', '{{ this.name }}', '{{ this.email }}')">Actualizar</button>
                        <button onclick="openDeleteModal('{{ this.id }}')">Eliminar</button></span><br>
                    <span><strong>Contraseña:</strong> {{ this.password }}</span>
                </div>
                {{/each}}
            </div>

            <div id="createModal" class="modal">
                <div class="modal-content">
                    <span class="close" onclick="closeCreateModal()">&times;</span>
                    <h2>Crear Usuario</h2>
                    <form id="createUserForm" onsubmit="createUser(event)">
                        <input type="text" id="name" name="name" placeholder="Nombre">
                        <input type="email" id="email" name="email" placeholder="Email">
                        <input type="password" id="password" name="password" placeholder="Contraseña">
                        <button type="submit">Crear</button>
                    </form>
                </div>
            </div>

            <div id="deleteModal" class="modal">
                <div class="modal-content">
                    <span class="close" onclick="closeDeleteModal()">&times;</span>
                    <h2>Eliminar Usuario</h2>
                    <form id="deleteForm" onsubmit="deleteUser(); return false;">
                        <input type="hidden" id="deleteUserId" name="id">
                        <p>¿Estás seguro en eliminar este usuario?</p>
                        <button type="submit">Eliminar</button>
                    </form>
                </div>
            </div>

            <div id="updateModal" class="modal">
                <div class="modal-content">
                    <span class="close" onclick="closeUpdateModal()">&times;</span>
                    <h2>Actualizar Usuario</h2>
                    <form id="updateForm" onsubmit="updateUser(); return false;">
                        <input type="hidden" id="userId" name="id">
                        <input type="text" id="userName" name="name" placeholder="Nuevo Nombre">
                        <input type="email" id="userEmail" name="email" placeholder="Nuevo Email">
                        <input type="password" id="userPassword" name="password" placeholder="Nueva Contraseña">
                        <button type="submit">Actualizar</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script>
        function openCreateModal() {
            document.getElementById('createModal').style.display = 'block';
        }

        function closeCreateModal() {
            document.getElementById('createModal').style.display = 'none';
        }

        function openUpdateModal(id, name, email) {
            document.getElementById('userId').value = id;
            document.getElementById('userName').value = name;
            document.getElementById('userEmail').value = email;
            document.getElementById('updateModal').style.display = 'block';
        }

        function closeUpdateModal() {
            document.getElementById('updateModal').style.display = 'none';
        }

        function openDeleteModal(id) {
            document.getElementById('deleteUserId').value = id;
            document.getElementById('deleteModal').style.display = 'block';
        }

        function closeDeleteModal() {
            document.getElementById('deleteModal').style.display = 'none';
        }

        function createUser(event) {
            event.preventDefault();

            const name = document.getElementById('name').value;
            const email = document.getElementById('email').value;
            const password = document.getElementById('password').value;

            fetch('/crear', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    name: name,
                    email: email,
                    password: password
                })
            })
                .then(response => response.json())
                .then(data => {
                    console.log('Usuario creado con exito:', data);
                    closeCreateModal();
                })
                .catch(error => {
                    console.error('Error al crear usuario:', error);
                });
        }

        function deleteUser() {
            const userId = document.getElementById('deleteUserId').value;

            fetch(`/eliminar`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    id: userId
                })
            })
                .then(response => {
                    if (response.ok) {
                        console.log('Usuario eliminado exitosamente');
                        closeDeleteModal();
                    } else {
                        console.error('Error al eliminar usuario:', response.statusText);
                    }
                })
                .catch(error => {
                    console.error('Error al eliminar usuario:', error);
                });
        }

        function updateUser() {
            const userId = document.getElementById('userId').value;
            const name = document.getElementById('userName').value;
            const email = document.getElementById('userEmail').value;
            const password = document.getElementById('userPassword').value;

            fetch(`/actualizar`, {
                method: 'PATCH',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    id: userId,
                    name: name,
                    email: email,
                    password: password
                })
            })
                .then(response => response.json())
                .then(data => {
                    console.log('El usuario a sido actualizado:', data);
                    closeUpdateModal();
                })
                .catch(error => {
                    console.error('Error no se puede actualizar el usuario:', error);
                });
        }
    </script>
</body>

</html>